/*******************************************************************************
 * Copyright 2012 Geoscience Australia
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package au.gov.ga.earthsci.worldwind.common.layers.delegate;

import gov.nasa.worldwind.avlist.AVList;

import org.w3c.dom.Element;

import au.gov.ga.earthsci.worldwind.common.layers.tiled.image.delegate.DelegatorTiledImageLayer;

/**
 * Super-interface which all delegates implement. Defines functions which allow
 * saving delegates to a string definition and loading a new instance from a
 * string definition.
 * 
 * @author Michael de Hoog (michael.dehoog@ga.gov.au)
 */
public interface IDelegate
{
	/**
	 * Generate a new Delegate from a string definition. Must return
	 * {@code null} if the provided definition string could not possibly be
	 * generated by the {@code toDefinition()} function.
	 * 
	 * @param definition
	 *            Definition string
	 * @param layerElement
	 *            DOM element of the layer definition from which this definition
	 *            is being created (could be null)
	 * @param params
	 *            AVList passed to the {@link DelegatorTiledImageLayer} (could
	 *            be null)
	 * @return New delegate if the definition is valid for this delegate
	 */
	IDelegate fromDefinition(String definition, Element layerElement, AVList params);

	/**
	 * Generate a definition string for this delegate. Must be a string accepted
	 * by the {@code fromDefinition()} function.
	 * 
	 * @param layerElement
	 *            DOM element of the layer; can add elements to this element if
	 *            this delegate requires (could be null)
	 * @return
	 */
	String toDefinition(Element layerElement);
}
